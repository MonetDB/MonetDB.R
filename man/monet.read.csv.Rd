% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbi.R
\name{monet.read.csv}
\alias{monet.read.csv}
\title{monet.read.csv}
\usage{
monet.read.csv(
  conn,
  files,
  tablename,
  header = TRUE,
  best.effort = FALSE,
  delim = ",",
  newline = "\\n",
  quote = "\"",
  create = TRUE,
  col.names = NULL,
  lower.case.names = FALSE,
  sep = delim,
  ...
)
}
\arguments{
\item{conn}{A MonetDB.R database connection, created using  \code{\link[DBI]{dbConnect}} with the \code{\link[MonetDB.R]{MonetDB.R}} database driver.}

\item{files}{A single string or a vector of strings containing the absolute file names of the CSV files to be imported.}

\item{tablename}{The dataframe that needs to be stored in the table}

\item{header}{Whether or not the CSV files contain a header line.}

\item{best.effort}{Use best effort flag when reading csv files and continue importing even if parsing of fields/lines fails.}

\item{delim}{Field separator in CSV file.}

\item{newline}{Newline in CSV file, usually \\n for UNIX-like systems and \\r\\r on Windows.}

\item{quote}{Quote character(s) in CSV file.}

\item{create}{Create table before importing?}

\item{col.names}{Optional column names in case the ones from CSV file should not be used}

\item{lower.case.names}{Convert all column names to lowercase in the database?}

\item{sep}{alias for \code{delim}}
}
\value{
Returns the number of rows imported if successful.
}
\description{
Instruct MonetDB to read a CSV file, optionally also create the table for it.
Note that this causes MonetDB to read a file on the machine where the server
is running, not on the machine where the R client runs.
}
\examples{
library(DBI)
conn <- dbConnect(MonetDB.R::MonetDB(), dbname = "demo")
file <- tempfile()
write.table(iris, file, sep=",", row.names=F)
MonetDB.R::monetdb.read.csv(conn, file, "iris")
}
