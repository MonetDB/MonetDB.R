% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transactions.R
\name{monetdb-transactions}
\alias{monetdb-transactions}
\alias{dbBegin,MonetDBConnection-method}
\alias{dbCommit,MonetDBConnection-method}
\alias{dbRollback,MonetDBConnection-method}
\title{MonetDB transaction management.}
\usage{
\S4method{dbBegin}{MonetDBConnection}(conn, ...)

\S4method{dbCommit}{MonetDBConnection}(conn, ...)

\S4method{dbRollback}{MonetDBConnection}(conn, ...)
}
\arguments{
\item{conn}{a \linkS4class{MonetDBConnection} object, produced by
\code{\link[DBI:dbConnect]{DBI::dbConnect()}}}

\item{...}{Unused, for extensibility.}
}
\value{
A boolean, indicating success or failure.
}
\description{
Functions to begin, commit or rollback SQL transactions
}
\details{
\code{dbBegin()} starts a transaction. \code{dbCommit()} and \code{dbRollback()}
end the transaction by either committing or rolling back the changes.
}
\examples{
# Only run the examples on systems with MonetDB connection:
run <- monetdbHasDefault()

library(DBI)
if (run) con <- dbConnect(MonetDB.R(), "monetdb://localhost/demo")
if (run) dbWriteTable(con, "USarrests", datasets::USArrests, temporary = TRUE)
if (run) dbGetQuery(con, 'SELECT count(*) from "USarrests"')

if (run) dbBegin(con)
if (run) dbExecute(con, 'DELETE from "USarrests" WHERE "Murder" > 1')
if (run) dbGetQuery(con, 'SELECT count(*) from "USarrests"')
if (run) dbRollback(con)

# Rolling back changes leads to original count
if (run) dbGetQuery(con, 'SELECT count(*) from "USarrests"')

if (run) dbRemoveTable(con, "USarrests")
if (run) dbDisconnect(con)
}
