% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transactions.R
\name{monetdb-transactions}
\alias{monetdb-transactions}
\alias{dbBegin,MonetDBConnection-method}
\alias{dbCommit,MonetDBConnection-method}
\alias{dbRollback,MonetDBConnection-method}
\title{MonetDB transaction management.}
\usage{
\S4method{dbBegin}{MonetDBConnection}(conn, ...)

\S4method{dbCommit}{MonetDBConnection}(conn, ...)

\S4method{dbRollback}{MonetDBConnection}(conn, ...)
}
\arguments{
\item{conn}{a \linkS4class{MonetDBConnection} object, produced by
\code{\link[DBI:dbConnect]{DBI::dbConnect()}}}

\item{...}{Unused, for extensibility.}
}
\value{
A boolean, indicating success or failure.
}
\description{
Functions to begin, commit or rollback SQL transactions
}
\details{
\code{dbBegin()} starts a transaction. \code{dbCommit()} and \code{dbRollback()}
end the transaction by either committing or rolling back the changes.
}
\examples{
library(DBI)
# Only run the examples on systems with the default MonetDB connection:
if (foundDefaultMonetDBdatabase()) {
  con <- dbConnect(MonetDB.R())
  dbWriteTable(con, "USarrests", datasets::USArrests, temporary = TRUE)
  dbGetQuery(con, 'SELECT count(*) from "USarrests"')

  dbBegin(con)
  dbExecute(con, 'DELETE from "USarrests" WHERE "Murder" > 1')
  dbGetQuery(con, 'SELECT count(*) from "USarrests"')
  dbRollback(con)

  # Rolling back changes leads to original count
  dbGetQuery(con, 'SELECT count(*) from "USarrests"')

  dbRemoveTable(con, "USarrests")
  dbDisconnect(con)
}
}
