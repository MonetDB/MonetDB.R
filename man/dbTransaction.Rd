% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbi.R
\name{dbTransaction}
\alias{dbTransaction}
\title{Create, commit or abort a database transaction.}
\usage{
\S4method{dbTransaction}{MonetDBConnection}(conn, ...)
}
\arguments{
\item{conn}{A MonetDB.R database connection, created using  \code{\link[DBI]{dbConnect}} with the \code{\link[MonetDB.R]{MonetDB.R}} database driver.}
}
\value{
TRUE if the transaction was successful
}
\description{
is used to switch the data from the normal auto-commiting mode into transactional mode. Here, changes to the database will not be permanent until \code{dbCommit} is called. If the changes are not to be kept around, you can use \code{dbRollback} to undo all the changes since \code{dbTransaction} was called.
}
\examples{
conn <- dbConnect(MonetDB.R(), "monetdb://localhost/acs")
dbSendUpdate(conn, "CREATE TABLE foo(a INT,b VARCHAR(100))")
dbTransaction(conn)
dbSendUpdate(conn, "INSERT INTO foo VALUES(?,?)", 42, "bar")
dbCommit(conn)
dbTransaction(conn)
dbSendUpdate(conn, "INSERT INTO foo VALUES(?,?)", 43, "bar")
dbRollback(conn)
}
